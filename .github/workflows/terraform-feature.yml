name: Terraform Plan and Docs

on:
  push:
    branches:
      - feature/**

env:
  AWS_ROLE_ARN: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/${{ secrets.IAM_ROLE_NAME }}
  TF_VERSION: 1.9.2
  AWS_DEFAULT_REGION: ap-northeast-1

permissions:
  id-token: write
  contents: write
  pull-requests: write

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup aqua
        uses: aquaproj/aqua-installer@v3.0.1
        with:
          aqua_version: v2.28.0
          aqua_opts: ""

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ${{ env.AWS_DEFAULT_REGION }}
          role-to-assume: ${{ env.AWS_ROLE_ARN }}

  lint:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Run TFsec
        env:
          REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          tfsec --format=checkstyle | reviewdog -f=checkstyle -name="tfsec" -reporter=github-pr-review -filter-mode=nofilter -fail-on-error

      - name: Run TFlint
        env:
          REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          tflint --init
          tflint --format=checkstyle | reviewdog -f=checkstyle -name="tflint" -reporter=github-pr-review -filter-mode=nofilter -fail-on-error

      - name: Check Terraform format
        run: terraform fmt -check

      - name: Check Terragrunt format
        run: terragrunt fmt -check

  terragrunt:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Initialize Terragrunt
        run: terragrunt init --terragrunt-non-interactive

      - name: Validate Terragrunt
        run: terragrunt validate

      - name: Run Terragrunt plan
        run: terragrunt plan --terragrunt-tfpath $GITHUB_WORKSPACE/.github/scripts/tfwrapper.sh

  terraform:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Initialize Terraform
        run: terraform init

      - name: Validate Terraform
        run: terraform validate

      - name: Run Terraform plan
        run: terraform plan -out=tfplan

  docs:
    runs-on: ubuntu-latest
    needs: [setup, terraform]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Generate Terraform docs
        run: terraform-docs markdown table --output-file README.md

      - name: Commit and push changes
        if: ${{ github.ref == 'refs/heads/feature/**' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add README.md
          git commit -m "Update Terraform docs"
          git push origin HEAD

      - name: Create Pull Request
        if: ${{ github.ref == 'refs/heads/feature/**' }}
        uses: peter-evans/create-pull-request@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "Update Terraform docs"
          branch: main
          title: "Update Terraform docs"
          body: "This PR updates the Terraform documentation."
